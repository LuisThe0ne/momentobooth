name: Release - macOS x64

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

# Sets permissions to allow version tag
permissions:
  contents: write

# Allow one concurrent deployment
concurrency:
  group: "release-macos-x64"
  cancel-in-progress: true

jobs:
  build:
    if: ${{ github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/') }}

    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install build dependencies
      run: brew install create-dmg

    - name: Detect Flutter Version
      uses: kuhnroyal/flutter-fvm-config-action@v1

    - name: Setup Flutter
      uses: hrishikesh-kadam/setup-flutter@v1
      with:
        ref: ${{ env.FLUTTER_VERSION }}
        setFlutterRootPath: 'true'
        addPubCacheBinToPath: 'true'
        flutterPrecache: '--macos'

    - name: Install minimal Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy
        target: aarch64-apple-darwin
      
    - name: Setup Rust build cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: "rust -> target"

    - name: Install flutter_rust_bridge_codegen
      uses: baptiste0928/cargo-install@v1
      with:
        crate: flutter_rust_bridge_codegen
        version: "1.77.1"

    - name: Install flutter_distributor
      run: dart pub global activate flutter_distributor

    - name: Flutter Config
      run: flutter config --enable-macos-desktop

    - name: Install Dependencies
      run: flutter packages get

    - name: Generate Dart-to-Rust bridging code
      run: >
        flutter_rust_bridge_codegen
        --rust-input rust/src/dart_bridge/api.rs
        --dart-output lib/rust_bridge/library_api.generated.dart
        --rust-output rust/src/dart_bridge/ffi_exports.rs
        --c-output macos/Runner/bridge_generated.h
        --skip-add-mod-to-lib --no-build-runner
      
    - name: Run Code Generation
      run: flutter pub run build_runner build --delete-conflicting-outputs
      
    - name: Flutter Analyze
      run: flutter analyze

    # Extract version from branch name
    - name: Extract Release version
      id: extract_release_version
      shell: bash
      run: |
        release_version=$(echo ${{ github.event.pull_request.head.ref }} | cut -d/ -f2)
        echo "release_version=$release_version" >> $GITHUB_OUTPUT
        echo "distributor_version=${release_version/-/+}" >> $GITHUB_OUTPUT

    - name: Build Project
      run: flutter build macos --release --dart-define SENTRY_DSN=${{ secrets.SENTRY_DSN }} --dart-define SENTRY_ENVIRONMENT=Production --dart-define SENTRY_RELEASE=${{ steps.extract_release_version.outputs.distributor_version }}

    - name: Copy binary to bundle and bundle dependency dylibs
      run: |
        mkdir macos_package
        cp -R build/macos/Build/Products/Release/MomentoBooth.app macos_package/

    # Pack
    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        directory: macos_package
        filename: 'MomentoBooth-${{ steps.extract_release_version.outputs.release_version }}-macOS-x64.zip'

    # Create GitHub release
    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        prerelease: true
        replacesArtifacts: true
        tag: ${{ steps.extract_release_version.outputs.release_version }}
        artifacts: "macos_package/MomentoBooth-${{ steps.extract_release_version.outputs.release_version }}-macOS-x64.zip"
